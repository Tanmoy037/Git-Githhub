git pull --rebase origin main                 ---command to rebase all commits in main branch
git remote add origin <github-repository>     ---command to add your remote repository link in your system git
git branch -m main               ---rename current branch
git branch                       ---for checking branch
git checkout master
git remote add origin <git repo>
git remote set-url origin <new repo>   ---For adding new url into git
git push -f origin main

git log                          ---shows every commit
git show <commit id>             ---for showing description about the commit
git diff                         ---shows every changes have been made in commit
git config --global diff.tool vscode    ---To set a Visual Diff Tool in git we run the following command
git log --oneline --reverse    --- We can use  this command to get a list of our commits
git show <commit ID>           --- we can use this command  to inspect and view a commit.
git show HEAD~1                --- where 1 is how many steps back from the current version we want to get back to
git ls-tree HEAD~1             --- command gives snapshot from the last commit
git restore --staged <file name>   --- to undo the <git add .> step  , or can say unstage.
git clean                          --- to clean unstracked files
git undo                           ---  command which will undo the last commit
git restore --source=HEAD~1 <file-name>  --- for undo last commit of spacefic
git restore --staged --worktree <your-file> <your-file> <your-file> <your-file> 

                                    ----To discard the changes you've made to the files listed in the git status output 
                                    and remove them from the staging area so that they won't be committed, you can use the git restore command with the
                                    --staged and --worktree options. This will remove the changes made to the listed files from both the staging area and 
                                    the working directory. Note that this command will permanently discard the changes made to the files, so make sure you've 
                                    saved any changes you want to keep before running it.


git rm --cached <file_name>         ---The git rm --cached <file_name> command is used to remove a file from the Git index (also known as the staging area) 
                                    without deleting the file from your local filesystem. This means that the file will be untracked and ignored by Git going
                                    forward.To use this command, replace <file_name> with the name of the file you want to remove from the index.
